<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python之字符串、列表、字典和元组</title>
    <url>/posts/2ccc3457.html</url>
    <content><![CDATA[<p>python学习第一步了解四大数据结构，他们分别为list、tuple、dict、set，初级目标是了解基本用法，进阶学习是了解底层如何实现。BUT 在这之前</p>
<a id="more"></a>
<p> 在学习四大数据结构之前先来回顾下python的基本数据类型，简单回顾下数字、字符串、布尔类型三种。</p>
<h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>知其然更要知其所以然，语言的对比学习往往会让人更为深刻。python较C++更为简洁，比如声明一个变量，C++中常用的就是 数据类型 变量名，如下：<br><code>int age = 20;</code><br>python中声明的变量是直接： 变量名 = 变量值，如下：<br><code>age = 20</code></p>
<h4 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h4><p>C系语言中的整数类型有很多，如int，long，long long等，使用时应明确标出。<br>python中不需要明确类型，并且没有限制长整数的数值大小，如果发生溢出，会自动转换为长整数。python中的整数类型都是int，没有long</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line">print(type(age)) <span class="comment">#查看数据类型的方法</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">int</span>'&gt; #运行结果</span></span><br></pre></td></tr></table></figure>
<p> ####字符串<br>python中加了引号的都是字符串，而且多种形式的引号单独使用没有差别，只有在引号中嵌套引号才有些许差别，三引号的作用时换行和注释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">'wwp'</span> <span class="comment">#单引号</span></span><br><span class="line">name = <span class="string">"wwp"</span> <span class="comment">#双引号</span></span><br><span class="line">name = <span class="string">'''wwp'''</span> <span class="comment">#三引号</span></span><br><span class="line">name = <span class="string">"What's ur name?"</span> <span class="comment">#单双引号混用</span></span><br><span class="line">name = <span class="string">'''</span></span><br><span class="line"><span class="string">第一行</span></span><br><span class="line"><span class="string">第二行</span></span><br><span class="line"><span class="string">第三行</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#pyhton中的字符串可以相加（字符串拼接）和相乘（字符串复制）</span></span><br><span class="line">name = <span class="string">'wwp'</span>*<span class="number">3</span> <span class="comment">#字符串和数字相乘表示输出几遍，‘wwpwwpwwp’</span></span><br></pre></td></tr></table></figure>
<p>字符串中其他的常用操作如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">"ada"</span></span><br><span class="line">name.title()<span class="comment">#首字母大写显示每个单词</span></span><br><span class="line">name.upper()<span class="comment">#全部大写</span></span><br><span class="line">name.lower()<span class="comment">#全部小写</span></span><br><span class="line"><span class="comment">#\n 换行符</span></span><br><span class="line"><span class="comment">#\t制表符（大空格）</span></span><br><span class="line">name.rstrip()<span class="comment">#暂时删除变量末尾(右边right)的空格</span></span><br><span class="line">print(name)<span class="comment">#依然有空格</span></span><br><span class="line"><span class="comment">#想要永久删除空格就必须将删除后的结果存回到变量中</span></span><br><span class="line">name.lstrip()<span class="comment">#暂时删除变量前面（左边left）的空格</span></span><br><span class="line">name.strip()<span class="comment">#暂时删除变量两端的空格</span></span><br><span class="line">age = <span class="number">23</span></span><br><span class="line">str(age)<span class="comment">#把非字符串转化为字符串</span></span><br></pre></td></tr></table></figure>
<p>####布尔类型<br>true &amp; flase<br>###列表LIST<br>###元组tuple<br>###字典dict<br>###集合set</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>W老师语录</title>
    <url>/posts/4c3f0d3b.html</url>
    <content><![CDATA[<p>研究生进入我们实验室，并受到了W老师学习上和思想上的多次教导，受益匪浅。<br>特此记录，以勉励自己未来继续努力。<br>W老师是我见过最好的老师，最棒的老师，真正的科研思维。</p>
<a id="more"></a>

<ol>
<li>爱因斯坦：“大学教育的价值不在于记住很多事实，而是训练大脑会思考”</li>
<li>冯·卡门：“科学家研究已有的世界，工程师创造未来的世界”。<br>科学家与工程师的区别最先在于科学与工程两个概念的区别：科学在于探索客观世界中存在的客观规律，所以科学强调分析，强调结论的唯一性；工程是人们综合应用科学理论和技术手段去改造客观世界的实践活动，所以工程强调综合，强调方案比较论证。这也是科学与工程的主要不同之处。</li>
<li>“指南”通常也意味着需求。</li>
</ol>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>“随笔”</tag>
      </tags>
  </entry>
  <entry>
    <title>写在嘉陵江畔</title>
    <url>/posts/2bc0ac71.html</url>
    <content><![CDATA[<p>本该秋雨绵绵的时节，不过重庆向来与秋无缘，昨天嘉陵江畔烧烤我们还大汗淋漓，今早起床感觉一秒入冬。这种天气本该不喜，不过想想这该是我最后享受重庆的湿冷，享受重庆的风土人情，果断出门，冬风细雨也难以阻挡这最后的步伐</p>
<a id="more"></a>

<!-- ![IMG_4676](/images/IMG_4676.jpg)-->
<img src="/posts/2bc0ac71/IMG_4676.jpg" class title="IMG_4676">
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>两小时一起快速搭建个人博客</title>
    <url>/posts/8f145c5e.html</url>
    <content><![CDATA[<p>两个小时的时间我一般用来鉴赏影片，不过搭一个博客刚好也OK。<br>搭建一个自己的博客需三部曲：<strong><em>下载安装包，部署环境，美化博客页面</em></strong></p>
<a id="more"></a>

<h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p>本文用的博客是使用Hexo + Github，需要安装以下内容：</p>
<ol>
<li><p>安装Node.js，安装地址：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">Node.js下载链接</a></p>
</li>
<li><p>安装Git，安装地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">Git下载地址</a><br>对于以上两个安装Mac建议从Homebrew安装node和git，那需要先安装Homebrew。<br>a. 首先打开官网 <a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a> ，你会在官网主页看到如下所示的内容:<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</code><br>b. 打开终端，输入上述命令,  即：<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</code><br>c. 点击回车<br>d. 输入电脑密码，等待安装<br>e. 显示Installation successful!表示安装成功<br>f. 开始使用命令行安装node和git，<code>brew install node</code> 和<code>brew install git</code></p>
</li>
<li><p>安装Hexo，使用npm安装，建议用root权限，不然会有权限问题。<br>a. 输入命令<code>sudo npm install -g hexo-cli</code>开始安装<br>b. 初始化blog文件夹<code>hexo init blog</code>,这里会从npm源安装，很容易卡住，建议使用淘宝的npm镜像，安装速度很快，依次输入以下命令<code>npm config set registry https://registry.npm.taobao.org</code>和<code>npm info express</code>,第二个命令是看看npm是否装好，此时再初始化blog文件夹（ATTENTION:如果你刚刚init过程失败，你要把生成的blog删除，再执行<code>hexo init blog</code>）<br>c. <code>cd blog</code><br>d. <code>npm install</code><br>e. <code>hexo g</code>这个命令是生成网页的静态文件，会生成一个public的文件<br>f. <code>hexo s</code>这个是启动本地服务，这样你就可以在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 中预览你的博客</p>
<p>至此已经完成了搭建博客的三分之一了。</p>
</li>
</ol>
<h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><ol>
<li>git的创建，首先你需要一个github的账号，默认已有，然后在你的git主页创建一个新的仓库，点击New repository。填入创建仓库的名称，必须是Yournsername.github.io这很关键，也就是你后面博客的网址。最后直接点击最下面的创建按钮，其他什么都不要动。</li>
<li>hexo关联到Github，打开blog文件夹，里面有一个名为_config.yml的文件，用文本编辑器打开并编辑他，在文档最后deploy，输入以下信息<br><code>deploy</code>:<br><code>type: git</code><br><code>repo: https://github.com/TristaWWP/TristaWWP.github.io.git</code><br><code>branch: master</code></li>
<li>安装扩展<code>npm install hexo-deployer-git --save</code></li>
<li>完成部署<code>hexo d</code>，期间会输入你的用户名和密码。</li>
</ol>
<h2 id="美化博客页面"><a href="#美化博客页面" class="headerlink" title="美化博客页面"></a>美化博客页面</h2><p>俗语说：人靠衣装，确实，我就很喜欢好看的衣服，同样博客也要靠主题的装扮，虽然博客中自带了主题，但是越好看的主题越能展现一个人的个性。你可以进入<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网</a>选择自己喜欢的主题，我一开始选的next主题，后来感觉这个貌似超多人用，于是在官网选购一番，耗时半小时之久都没选到喜欢的，还是用回了next，在这里我太佩服前端和UI的小伙伴了。</p>
<ol>
<li>进入主题文件夹 <code>cd blog</code></li>
<li>下载主题 <code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></li>
<li>修改主题的配置文件_config.yml中的theme属性，设置为next</li>
<li>然后进行一系列的美化页面效果，请参看这位老哥的文章，十分全面，<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">Next主题的个性化教程</a></li>
<li>然后就可以创建一篇新的博客<code>hexo new &quot;博客标题&quot;</code>，会产生一个md文件，用文本编辑器打开，并且在里面任意发挥开始你的第一篇博客吧。</li>
<li>简单两行完成发布文章，以后每次这样进行就可以更新博客了<code>hexo g</code>  <code>hexo d</code></li>
</ol>
<p>对于网速实在很差的实验室来说，应该刚好两个小时搞定，不过写这篇博文又用了两个小时。。。</p>
]]></content>
      <categories>
        <category>软件类使用</category>
      </categories>
      <tags>
        <tag>软件类使用</tag>
      </tags>
  </entry>
</search>
